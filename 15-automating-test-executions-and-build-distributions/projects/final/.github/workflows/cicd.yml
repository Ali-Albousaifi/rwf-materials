name: Test, build and deploy

on:
  pull_request:
    branches:
    - develop
  push:
    branches:
    - develop

permissions: read-all

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v2
        with:
          channel: master

      - name: Run flutter doctor
        run: flutter doctor -v

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get all packages and test
        run: make get && make testing

  android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Clone flutter repository with master channel
        uses: subosito/flutter-action@v2
        with:
          channel: master

      - name: Run flutter doctor
        run: flutter doctor -v

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Clean, get and lint
        run: make clean && make get && make lint
      
      - name: Build apk
        run: flutter build apk

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          token: ${{ secrets.FIREBASE_CLI_TOKEN }}
          groups: ${{ secrets.TESTERS_GROUPS }}
          file: build/app/outputs/flutter-apk/app-release.apk
  ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: master
      
      - name: Run flutter doctor
        run: flutter doctor -v

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clean and get packages
        run: make clean && make get && make lint && make format
      
      - name: Install iOS Gems
        working-directory: ${{ github.workspace }}/ios
        run: bundle install
      
      - name: Install Pods
        working-directory: ${{ github.workspace }}/ios
        run: flutter precache --ios && pod install

      - name: Dry build ios app
        run: flutter build ios --no-codesign --dart-define=TEXT=${{ secrets.DART_DEFINE_TEXT }}
        
      - name: Install iOS Certificate and Profile
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane install_certificate_and_profile
        env:
          APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
          APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
          APPLE_KEY_CONTENT: ${{ secrets.APPLE_KEY_CONTENT }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          GITHUB_AUTHORIZATION_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Increment build number
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane build_number_incrementing

      - name: Build IPA
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane build
        env:
          BUNDLE_ID: ${{ secrets.BUNDLE_ID }}
          PROVISION_PROFILE_NAME: ${{ secrets.PROVISION_PROFILE_NAME }}

      - name: Distribute iOS Beta App
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane distribute_ios_app
        env:
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          IOS_TESTERS: ${{ secrets.TESTERS_GROUPS }}